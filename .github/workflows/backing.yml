name: Backing

on:
  workflow_dispatch:

jobs:
  build-upload:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: "Setup yq"
        uses: dcarbone/install-yq-action@v1.1.1
      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          mask-aws-account-id: true
      - name: "Install Rust toolchain"
        uses: dtolnay/rust-toolchain@stable
      - name: "Install Zig toolchain"
        uses: korandoru/setup-zig@v1
        with:
          zig-version: 0.11.0
      - name: "Install Cargo Lambda"
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: cargo-lambda/cargo-lambda
          platform: linux
          arch: x86_64
      - name: "Build backing and upload"
        run: |
          parameters_json=$(yq -o=json '.' parameters.yml)
          bucket_name=$(jq -r '.bucket_name' <<< $parameters_json)
          
          cargo lambda build --release --bin log-processor --arm64 --output-format zip

          for src in $(find target/lambda -name "bootstrap.zip"); do
            name=$(basename "$(dirname "$src")")
            s3_key="backing/${name}.zip"
            dst="s3://$bucket_name/$s3_key"
          
            aws s3 cp "$src" "$dst" > /dev/null 2>&1
            echo "Uploaded '$src' to 's3://$bucket_name/$s3_key'"

            function_name="benchmark-$name"
            function_exists=$(aws lambda get-function --function-name $function_name 2>/dev/null)

            if [ "$?" -eq 0 ]; then
              aws lambda update-function-code --function-name $function_name --s3-bucket $bucket_name --s3-key $s3_key > /dev/null 2>&1
              echo "Function '$function_name' exists. Updated function code."
            else
              echo "Function '$function_name' does not exist. Skipping update."
            fi
          done
