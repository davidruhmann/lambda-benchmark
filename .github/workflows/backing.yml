name: Backing

on:
  workflow_dispatch:

jobs:
  build-upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Setup yq"
        uses: dcarbone/install-yq-action@v1.1.1
      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          mask-aws-account-id: true
      - name: "Install Rust toolchain"
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: "Install Zig"
        run: |
          zigVersion=$(curl -s https://github.com/ziglang/zig/releases | grep -oP 'href="/ziglang/zig/releases/tag/\K([0-9]+\.[0-9]+\.[0-9]+)' | head -n 1); \
          dpkgArch="$(dpkg --print-architecture)"; \
          case "${dpkgArch##*-}" in \
          amd64) zigArch='x86_64';; \
          arm64) zigArch='aarch64';; \
          esac; \
          url="https://ziglang.org/download/${zigVersion}/zig-linux-${zigArch}-${zigVersion}.tar.xz"; \
          wget "$url"; \
          tar xf "zig-linux-${zigArch}-${zigVersion}.tar.xz"; \
          mv zig-linux-${zigArch}-${zigVersion} zig; \
          rm "zig-linux-${zigArch}-${zigVersion}.tar.xz";
      - name: "Install Cargo Lambda"
        run: |
          cargoLambdaVersion=$(curl -s https://github.com/cargo-lambda/cargo-lambda/releases | grep -oP 'href="/cargo-lambda/cargo-lambda/releases/tag/\K(v[0-9]+\.[0-9]+\.[0-9]+)' | head -n 1); \
          mkdir cargo-lambda; \
          cd cargo-lambda; \
          dpkgArch="$(dpkg --print-architecture)"; \
          case "${dpkgArch##*-}" in \
          amd64) lambdaArch='x86_64-unknown-linux-musl';; \
          arm64) lambdaArch='aarch64-unknown-linux-musl';; \
          esac; \
          url="https://github.com/cargo-lambda/cargo-lambda/releases/download/${cargoLambdaVersion}/cargo-lambda-${cargoLambdaVersion}.${lambdaArch}.tar.gz"; \
          wget "$url"; \
          tar xf "cargo-lambda-${cargoLambdaVersion}.${lambdaArch}.tar.gz"; \
          rm "cargo-lambda-${cargoLambdaVersion}.${lambdaArch}.tar.gz";
      - name: "Build backing and upload"
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          parameters_json=$(yq -o=json '.' parameters.yml)
          bucket_name=$(jq -r '.bucket_name' <<< $parameters_json)
          
          cargo lambda build --release --arm64 --output-format zip

          for src in $(find target/lambda -name "bootstrap.zip"); do
            name=$(basename "$(dirname "$src")")
            aws s3 cp "$file" s3://$bucket_name/backing/ > /dev/null 2>&1
            echo "Uploaded '$file' to 's3://$bucket_name/backing/'"
          done
